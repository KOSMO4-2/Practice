package com.toyou.project.controller.user;

import org.springframework.http.HttpHeaders;
import org.springframework.stereotype.Controller;
import org.springframework.util.LinkedMultiValueMap;
import org.springframework.util.MultiValueMap;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.ResponseBody;
import org.springframework.web.client.RestTemplate;


//인증이 안된 사용자들이 출입할 수 있는 경로는 /auth/* 으로만 설정함
//그냥 주소가 / 이면 index.jsp 까지 허용
//static 이하에 있는 /js/*, /css/* , /image/* 허용
@Controller
public class UserController {
	
	@GetMapping("/auth/joinForm")
	public String joinForm() {	
		return "user/joinForm";
	}
	
	@GetMapping("/auth/loginForm")
	public String loginForm() {	
		return "user/loginForm";
	}
	
	@GetMapping("/auth/kakao/callback")
	public @ResponseBody String kakaoCallback(String code) { // DATA를 리턴해주는 컨트롤러
		// POST 방식으로 key=value 데이터를 요청 (카카오서버로)
		// 1. Retrofit2
		// 2. OkHttp
		// 3. RestTemplate
		RestTemplate rt = new RestTemplate();
		HttpHeaders headers = new HttpHeaders();
		headers.add("Content-type", "application/x-www-form-urlencoded;charset=utf-8");
		
		MultiValueMap<String, String> params = new LinkedMultiValueMap<>();
		params.add("grant_type", "authorization_code");
		params.add("client_id", "9678b56f9afb8f96a880f7b1bdaee036");
		params.add("redirect_uri", "http://localhost:8003/auth/kakao/callback");
		params.add("grant_type ", "authorization_code");
		
		
		return "카카오 인증 완료 : 코드값 : " +code ;
	}
	
	
	@GetMapping("/user/mypageForm")
	public String mypageForm() {
		return "/user/mypageForm";
	}
}
